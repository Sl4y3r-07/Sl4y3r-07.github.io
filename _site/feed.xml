

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sl4y3r_07</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-08-14T13:10:44+05:30</updated>
  <author>
    <name>Ayush Goyal</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2025 Ayush Goyal </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Networking - Part 3</title>
    <link href="http://localhost:4000/posts/Networking-Part-3/" rel="alternate" type="text/html" title="Networking - Part 3" />
    <published>2025-08-11T06:21:40+05:30</published>
  
    <updated>2025-08-11T06:21:40+05:30</updated>
  
    <id>http://localhost:4000/posts/Networking-Part-3/</id>
    <content src="http://localhost:4000/posts/Networking-Part-3/" />
    <author>
      <name>Ayush Goyal</name>
    </author>

  
    
    <category term="Blogs" />
    
    <category term="Networking" />
    
  

  
    <summary>
      





      Hey everyone! Welcome back to the third part of networking. In this blog, I will be covering the requirements (related to networking) that will be needed to get a clear understanding of the DevOps. So, let’s start…

Switching

It is how a network switch moves data between devices inside the same local network.

Let’s understand switching in a simpler way:

  Each network device has a unique MAC...
    </summary>
  

  </entry>

  
  <entry>
    <title>Reversing LummaC2 Stealer</title>
    <link href="http://localhost:4000/posts/Reversing-LummaC2-Stealer/" rel="alternate" type="text/html" title="Reversing LummaC2 Stealer" />
    <published>2025-01-19T06:21:40+05:30</published>
  
    <updated>2025-01-19T06:21:40+05:30</updated>
  
    <id>http://localhost:4000/posts/Reversing-LummaC2-Stealer/</id>
    <content src="http://localhost:4000/posts/Reversing-LummaC2-Stealer/" />
    <author>
      <name>Ayush Goyal</name>
    </author>

  
    
    <category term="Blogs" />
    
    <category term="Malware" />
    
    <category term="Analysis" />
    
  

  
    <summary>
      





      Hi again! In this blog, I have reversed a malware containing LummaC2 stealer.

Basic Analysis

  
    First, let’s analyse the malware on VirusTotal 



  
  SHA-256 of the file is: c5fd4ee7fef2655d5340221a2fe4990d0b744720fdb0b0530599b376c913bf7e
  The original name of the binary is Handler.exe and it’s a .NET executable
  Looking at the strings, lot of base64 encoded strings are present, it su...
    </summary>
  

  </entry>

  
  <entry>
    <title>BackdoorCTF'24 Writeup</title>
    <link href="http://localhost:4000/posts/BackdoorCTF'24-Writeup/" rel="alternate" type="text/html" title="BackdoorCTF&amp;apos;24 Writeup" />
    <published>2024-12-23T09:41:40+05:30</published>
  
    <updated>2024-12-23T09:41:40+05:30</updated>
  
    <id>http://localhost:4000/posts/BackdoorCTF'24-Writeup/</id>
    <content src="http://localhost:4000/posts/BackdoorCTF'24-Writeup/" />
    <author>
      <name>Ayush Goyal</name>
    </author>

  
    
    <category term="Writeups" />
    
  

  
    <summary>
      





      Reversing/ GoBlind

Description:
This binary hides its secrets deep within. Can you untangle the layers and reveal the secret?

File : file

Writeup

  This challenge was written in GoLang.
  Executing this binary (without debugger), requires a password to reveal some super secret as it says.
  Giving some random input ( less than 16 chars) says: Invalid Length.
  Open the binary in the debugge...
    </summary>
  

  </entry>

  
  <entry>
    <title>Piping Process In Shell</title>
    <link href="http://localhost:4000/posts/Piping-Process-In-Shell/" rel="alternate" type="text/html" title="Piping Process In Shell" />
    <published>2024-05-30T06:21:40+05:30</published>
  
    <updated>2024-05-31T03:01:37+05:30</updated>
  
    <id>http://localhost:4000/posts/Piping-Process-In-Shell/</id>
    <content src="http://localhost:4000/posts/Piping-Process-In-Shell/" />
    <author>
      <name>Ayush Goyal</name>
    </author>

  
    
    <category term="Blogs" />
    
  

  
    <summary>
      





      Hey everyone! Welcome back to my blog series. Recently, I’ve been dedicating time to my basic my-shell project, where I’m working on implementing a shell in C++. While doing so, I got stuck in adding piping functionality. In this blog, I will be explaining the piping process. So, let’s start with the fundamental question, what is piping?

A mechanism or a process through which the output of a c...
    </summary>
  

  </entry>

  
  <entry>
    <title>CPU Scheduling</title>
    <link href="http://localhost:4000/posts/CPU-Scheduling/" rel="alternate" type="text/html" title="CPU Scheduling" />
    <published>2024-04-05T06:21:40+05:30</published>
  
    <updated>2024-04-08T04:01:53+05:30</updated>
  
    <id>http://localhost:4000/posts/CPU-Scheduling/</id>
    <content src="http://localhost:4000/posts/CPU-Scheduling/" />
    <author>
      <name>Ayush Goyal</name>
    </author>

  
    
    <category term="Blogs" />
    
    <category term="OperatingSystems" />
    
  

  
    <summary>
      





      Hey everyone! This article is about how CPU schedules the processes and executes them, covering various scheduling algorithms. It consists of my notes which I prepared while studying this topic from  operating systems textbook by Silberschatz and Galvin. So let’s start:

CPU-I/O burst cycle

  process execution consists of a cycle of CPU execution and I/O wait.
  process alternate between these...
    </summary>
  

  </entry>

</feed>


